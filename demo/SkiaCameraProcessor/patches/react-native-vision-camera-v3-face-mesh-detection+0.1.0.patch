diff --git a/node_modules/react-native-vision-camera-v3-face-mesh-detection/android/src/main/java/com/visioncamerav3facemeshdetection/VisionCameraV3FaceMeshDetectionModule.kt b/node_modules/react-native-vision-camera-v3-face-mesh-detection/android/src/main/java/com/visioncamerav3facemeshdetection/VisionCameraV3FaceMeshDetectionModule.kt
index 9f807cd..70d9878 100644
--- a/node_modules/react-native-vision-camera-v3-face-mesh-detection/android/src/main/java/com/visioncamerav3facemeshdetection/VisionCameraV3FaceMeshDetectionModule.kt
+++ b/node_modules/react-native-vision-camera-v3-face-mesh-detection/android/src/main/java/com/visioncamerav3facemeshdetection/VisionCameraV3FaceMeshDetectionModule.kt
@@ -3,12 +3,14 @@ package com.visioncamerav3facemeshdetection
 
 import android.media.Image
 import com.facebook.react.bridge.WritableNativeMap
-import com.google.android.gms.tasks.Task
-import com.google.android.gms.tasks.Tasks
 import com.google.mlkit.vision.common.InputImage
-import com.mrousavy.camera.frameprocessor.Frame
-import com.mrousavy.camera.frameprocessor.FrameProcessorPlugin
-import com.mrousavy.camera.frameprocessor.VisionCameraProxy
+import com.google.mlkit.vision.facemesh.FaceMeshDetection
+import com.google.mlkit.vision.facemesh.FaceMeshDetector
+import com.google.mlkit.vision.facemesh.FaceMeshDetectorOptions
+
+import com.mrousavy.camera.frameprocessors.Frame
+import com.mrousavy.camera.frameprocessors.FrameProcessorPlugin
+import com.mrousavy.camera.frameprocessors.VisionCameraProxy
 
 
 
@@ -18,15 +20,25 @@ class VisionCameraV3FaceMeshDetectionModule(proxy : VisionCameraProxy, options:
       try {
         val image = InputImage.fromMediaImage(mediaImage, 0)
 
-        val detector : TextRecognizer = when (arguments?.get("mode")) {
-            "faceMesh" -> FaceMeshDetection.getClient(FaceMeshDetectorOptions.DEFAULT_OPTIONS)
-            "boundingBox" -> FaceMeshDetection.getClient(FaceMeshDetectorOptions.Builder().setUseCase(UseCase.BOUNDING_BOX_ONLY) .build())
-            else -> FaceMeshDetection.getClient(FaceMeshDetectorOptions.DEFAULT_OPTIONS)
+        val detector : FaceMeshDetector = when (arguments?.get("mode")) {
+            "faceMesh" -> FaceMeshDetection.getClient(FaceMeshDetectorOptions.Builder().setUseCase(FaceMeshDetectorOptions.FACE_MESH).build())
+            "boundingBox" -> FaceMeshDetection.getClient(FaceMeshDetectorOptions.Builder().setUseCase(FaceMeshDetectorOptions.BOUNDING_BOX_ONLY).build())
+            else -> FaceMeshDetection.getClient(FaceMeshDetectorOptions.Builder().setUseCase(FaceMeshDetectorOptions.FACE_MESH).build())
             }
        // val task: Task<Text> = recognizer.process(image)
         //val result: Text? = Tasks.await(task)
         val map = WritableNativeMap()
 
+        val result = detector.process(image)
+          .addOnSuccessListener { result ->
+              // Task completed successfully
+              // …
+          }
+          .addOnFailureListener { e ->
+              // Task failed with an exception
+              // …
+          }
+
 
         return map.toHashMap()
       } catch (e: Exception) {
diff --git a/node_modules/react-native-vision-camera-v3-face-mesh-detection/android/src/main/java/com/visioncamerav3facemeshdetection/VisionCameraV3FaceMeshDetectionPackage.kt b/node_modules/react-native-vision-camera-v3-face-mesh-detection/android/src/main/java/com/visioncamerav3facemeshdetection/VisionCameraV3FaceMeshDetectionPackage.kt
index 5337678..618278e 100644
--- a/node_modules/react-native-vision-camera-v3-face-mesh-detection/android/src/main/java/com/visioncamerav3facemeshdetection/VisionCameraV3FaceMeshDetectionPackage.kt
+++ b/node_modules/react-native-vision-camera-v3-face-mesh-detection/android/src/main/java/com/visioncamerav3facemeshdetection/VisionCameraV3FaceMeshDetectionPackage.kt
@@ -5,7 +5,7 @@ import com.facebook.react.ReactPackage
 import com.facebook.react.bridge.ReactApplicationContext
 import com.facebook.react.uimanager.ViewManager
 import com.facebook.react.bridge.NativeModule
-import com.mrousavy.camera.frameprocessor.FrameProcessorPluginRegistry
+import com.mrousavy.camera.frameprocessors.FrameProcessorPluginRegistry
 
 class VisionCameraV3FaceMeshDetectionPackage : ReactPackage {
    companion object {
diff --git a/node_modules/react-native-vision-camera-v3-face-mesh-detection/src/index.tsx b/node_modules/react-native-vision-camera-v3-face-mesh-detection/src/index.tsx
index ad74ad4..11d0c69 100644
--- a/node_modules/react-native-vision-camera-v3-face-mesh-detection/src/index.tsx
+++ b/node_modules/react-native-vision-camera-v3-face-mesh-detection/src/index.tsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import { useRunInJS } from 'react-native-worklets-core';
+import { useRunOnJS } from 'react-native-worklets-core';
 import {
   VisionCameraProxy,
   Camera as VisionCamera,
@@ -32,7 +32,7 @@ function scanFaceMesh(frame: Frame, options: FaceMeshDetectionOptions): any {
 export const Camera = (props: CameraTypes) => {
   const { callback, device, options } = props;
   // @ts-ignore
-  const useWorklets = useRunInJS((data: object): void => {
+  const useWorklets = useRunOnJS((data: object): void => {
     callback(data);
   }, []);
   const frameProcessor: FrameProcessor = useFrameProcessor(
